name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      APP_NAME: app
      MIX_ENV: prod
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1.0.0
        with:
          otp-version: 22.0
          elixir-version: 1.10.0
      - run: mix deps.get
      - run: mix compile
      - run: mix distillery.release
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/deploy_key
            StrictHostKeyChecking no
          END
          export VERSION="$(cat _build/prod/rel/${APP_NAME}/releases/start_erl.data | awk '{print $2}')"
          export SOURCE="_build/prod/rel/${APP_NAME}/releases/${VERSION}/${APP_NAME}.tar.gz"
          export SHA=$(git rev-parse --short HEAD)
          export TARGET="/tmp/${APP_NAME}-${SHA}.tar.gz"
          rsync -chav --delete $SOURCE production:$TARGET
          ssh production "mkdir -p ~/releases"
          ssh production "tar xvf  $TARGET --one-top-level -C ~/releases"
          ssh production "ln -s ~/${APP_NAME}-${SHA} ~/releases/${APP_NAME}-${SHA}"
        env:
          SSH_USER: ${{ secrets.PRODUCTION_USERNAME }}
          SSH_KEY: ${{ secrets.PRODUCTION_KEY }}
          SSH_HOST: ${{ secrets.PRODUCTION_HOST }}
