name: Hotcode deployement
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      APP_NAME: app
      MIX_ENV: prod
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1.0.0
        with:
          otp-version: 22.0
          elixir-version: 1.10.0

      - name: Install dependencies
        run: mix deps.get

      - name: Compile and release
        run: |
          mix compile
          mix distillery.release --upgrade

      - name: SSH config
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/deploy_key
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.PRODUCTION_HOST }}
          SSH_USER: ${{ secrets.PRODUCTION_USERNAME }}
          SSH_KEY: ${{ secrets.PRODUCTION_KEY }}

      - name: Deploy
        run: |
          export VERSION="$(cat _build/prod/rel/${APP_NAME}/releases/start_erl.data | awk '{print $2}')"
          export SOURCE="_build/prod/rel/${APP_NAME}/releases/${VERSION}/${APP_NAME}.tar.gz"
          export TARGET="/tmp/${APP_NAME}.tar.gz"
          rsync -chav --delete $SOURCE production:$TARGET

          ssh production "bash -s" <<EOF
            mkdir -p ${APP_NAME}/releases/${VERSION}
            cp -r $TARGET ${APP_NAME}/releases/${VERSION}/${APP_NAME}.tar.gz
            ./${APP_NAME}/bin/${APP_NAME} upgrade ${VERSION}
          EOF
